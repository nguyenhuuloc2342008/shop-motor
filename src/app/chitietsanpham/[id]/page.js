'use client';

import { useParams } from 'next/navigation';
import Header from '@/app/components/header/header';
import Footer from '@/app/components/footer/footer';
import Image from 'next/image';
import styles from './productDetail.module.css';
import { useState } from 'react';


const productNames = [
  "BMW", "KAWASAKI Z1000", "DUCATI MONSTER 795", "APRILLIA RSV4",
  "CBR 650R", "BENELLI TRK502", "KAWASAKI", "KAWASAKI NINJA H2R", "BMW MOTORRAD"
];

const productPrices = [
  "500.000.000 VND", "450.000.000 VND", "400.000.000 VND", "650.000.000 VND",
  "300.000.000 VND", "220.000.000 VND", "480.000.000 VND", "1.000.000.000 VND", "750.000.000 VND"
];

const productDescriptions = [
  "BMW - M·ªôt chi·∫øc xe th·ªÉ thao ƒë·∫≥ng c·∫•p v·ªõi hi·ªáu su·∫•t m·∫°nh m·∫Ω v√† thi·∫øt k·∫ø tinh t·∫ø.",
  "KAWASAKI Z1000 - Xe ph√¢n kh·ªëi l·ªõn v·ªõi s·ª©c m·∫°nh v∆∞·ª£t tr·ªôi v√† kh·∫£ nƒÉng v·∫≠n h√†nh xu·∫•t s·∫Øc.",
  "DUCATI MONSTER 795 - S·ª± k·∫øt h·ª£p ho√†n h·∫£o gi·ªØa hi·ªáu su·∫•t v√† phong c√°ch m·∫°nh m·∫Ω.",
  "APRILLIA RSV4 - Xe ƒëua ƒë∆∞·ªùng ph·ªë v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn v√† thi·∫øt k·∫ø ƒë·ªôc ƒë√°o.",
  "CBR 650R - M·ªôt chi·∫øc xe th·ªÉ thao d·ªÖ ƒëi·ªÅu khi·ªÉn v·ªõi kh·∫£ nƒÉng v·∫≠n h√†nh tuy·ªát v·ªùi.",
  "BENELLI TRK502 - Xe ƒëa d·ª•ng, th√≠ch h·ª£p cho c·∫£ nh·ªØng chuy·∫øn ƒëi xa v√† ƒë·ªãa h√¨nh kh√≥ khƒÉn.",
  "KAWASAKI - M·ªôt th∆∞∆°ng hi·ªáu xe n·ªïi ti·∫øng v·ªõi s·ª± m·∫°nh m·∫Ω v√† ƒë·ªô b·ªÅn cao.",
  "KAWASAKI NINJA H2R - Xe si√™u m√¥ t√¥ m·∫°nh m·∫Ω v·ªõi c√¥ng ngh·ªá ti√™n ti·∫øn v√† kh·∫£ nƒÉng v·∫≠n h√†nh xu·∫•t s·∫Øc.",
  "BMW MOTORRAD - Xe ph√¢n kh·ªëi l·ªõn c·ªßa BMW, thi·∫øt k·∫ø sang tr·ªçng v√† m·∫°nh m·∫Ω."
];

const productCodes = [
  "BMW001", "KAWA1000", "DUCA795", "APRILRSV4",
  "CBR650R", "BENEL502", "KAWA000", "KAWAH2R", "BMWMOTO"
];

const productStock = [
  5, 3, 2, 1,
  10, 8, 6, 1, 4
];

const productConditions = [
  "M·ªõi", "M·ªõi", "C≈©", "M·ªõi",
  "M·ªõi", "M·ªõi", "C≈©", "M·ªõi", "M·ªõi"
];

const productBrands = [
  "BMW", "Kawasaki", "Ducati", "Aprilia",
  "Honda", "Benelli", "Kawasaki", "Kawasaki", "BMW"
];

export default function ProductDetailPage() {
  const params = useParams();
  const id = parseInt(params.id);
  const [liked, setLiked] = useState(false);

  if (isNaN(id) || id < 0 || id >= productNames.length) {
    return <div>S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i.</div>;
  }

  const handleBuy = () => {
    alert(`B·∫°n ƒë√£ ch·ªçn mua: ${productNames[id]} v·ªõi gi√° ${productPrices[id]}`);
  };

  const toggleLike = () => {
    setLiked(!liked);
  };

  return (
    <>
      <Header />
      <div className={styles.detailContainer}>
        <div className={styles.imageSection}>
          <Image 
            src={`/images/anh${id + 1}.jpg`} 
            alt={productNames[id]} 
            width={500} 
            height={400} 
          />
        </div>
        <div className={styles.infoSection}>
          <h1>{productNames[id]}</h1>
          <p><strong>Gi√°:</strong> {productPrices[id]}</p>
          <p>{productDescriptions[id]}</p>
          <div className={styles.buttons}>
            <button className={styles.buyButton} onClick={handleBuy}>üõí Mua ngay</button>
            <button className={styles.likeButton} onClick={toggleLike}>
              {liked ? '‚ù§Ô∏è ƒê√£ th√≠ch' : 'ü§ç Y√™u th√≠ch'}
            </button>
          </div>

          <div className={styles.extraInfo}>
            <p><strong>M√£ s·∫£n ph·∫©m:</strong> {productCodes[id]}</p>
            <p><strong>S·ªë l∆∞·ª£ng c√≤n l·∫°i:</strong> {productStock[id]}</p>
            <p><strong>T√¨nh tr·∫°ng:</strong> {productConditions[id]}</p>
            <p><strong>H√£ng s·∫£n xu·∫•t:</strong> {productBrands[id]}</p>
          </div>
        </div>
      </div>
      <div className={styles.relatedSection}>
  <h2 className={styles.relatedTitle}>üõµ S·∫£n ph·∫©m kh√°c</h2>
  <div className={styles.relatedList}>
    {
      productNames
        .map((name, index) => ({ index, name })) // gi·ªØ l·∫°i index ƒë·ªÉ t·∫°o link ƒë√∫ng
        .filter(product => product.index !== id) // b·ªè s·∫£n ph·∫©m hi·ªán t·∫°i
        .sort(() => 0.5 - Math.random())         // x√°o tr·ªôn
        .slice(0, 3)                              // l·∫•y 3 s·∫£n ph·∫©m
        .map(product => (
          <div key={product.index} className={styles.relatedItem}>
            <Image
              src={`/images/anh${product.index + 1}.jpg`}
              alt={productNames[product.index]}
              width={200}
              height={150}
            />
            <h3>{productNames[product.index]}</h3>
            <p>{productPrices[product.index]}</p>
            <a href={`/product/${product.index}`} className={styles.detailLink}>Xem chi ti·∫øt</a>
          </div>
        ))
    }
  </div>
</div>

      <Footer />
    </>
  );
}
